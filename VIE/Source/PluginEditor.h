/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#ifndef __PLUGINEDITOR_H_5C3890ED__
#define __PLUGINEDITOR_H_5C3890ED__

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginProcessor.h"
#include "LifeCell.h"


//==============================================================================
/**
*/
class VIEAudioProcessorEditor  :	public AudioProcessorEditor, public Timer, public Slider::Listener, public Button::Listener, public AsyncUpdater
{
public:
    VIEAudioProcessorEditor (VIEAudioProcessor* ownerFilter);
    ~VIEAudioProcessorEditor();

    //==============================================================================
    // This is just a standard Juce paint method...
    void paint (Graphics& g);
	ScopedPointer<LifeCell> grid[12][10];
	
    void sliderValueChanged (Slider *sliderThatHasChanged);
	void sliderDragStarted (Slider *sliderThatHasChanged){};
	void sliderDragEnded (Slider *sliderThatHasChanged){};
    
    void buttonClicked (Button *buttonThatWasClicked);
    
    void handleAsyncUpdate();
    
    void timerCallback();
    
    	
private:
    ComponentAnimator fadeOutComponent;
    Image juceImage;
    
    Slider DivKnob, worldSizeX, worldSizeY, velocityRange;
    Label beatDivision, sizeX, sizeY, resetLabel;
    ImageButton resetButton;
    
    int worldx, worldy, selectX, selectY;
    float minVel, maxVel;
    
    void setDivLabel(int div);
    void setWorldSizeXLabel (int selX);
    void setWorldSizeYLabel (int selY);
    
	VIEAudioProcessor* getAudioProcessorAsSubClass() const{
		return static_cast<VIEAudioProcessor*> (getAudioProcessor());
	}
    
    void resetGrid();
	
};


#endif  // __PLUGINEDITOR_H_5C3890ED__
